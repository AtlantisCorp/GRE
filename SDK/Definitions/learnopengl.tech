# ===================================================================
#
# lightingmaps.tech
# Techniques from the 'learnopengl' site web.
#
# ===================================================================

% version 1

# ===================================================================
# Lightingmap technique.

[Program learnopengl.lightingmaps.program]
{
    [Vertex]
    {
        [GLSL "learnopengl.lightingmaps.vert"]
    }

    [Fragment]
    {
        [GLSL "learnopengl.lightingmaps.frag"]
    }
}

[Technique learnopengl.lightingmaps.technique]
{
    [Attribute Position position]
    [Attribute Normal normal]
    [Attribute Texture texCoords]

    [Alias ModelMatrix model]
    [Alias ViewMatrix view]
    [Alias ProjectionMatrix projection]

    [Alias CameraPosition viewPos]

    [Alias MaterialTexDiffuse "material.diffuse"]
    [Alias MaterialTexSpecular "material.specular"]
    [Alias MaterialShininess "material.shininess"]

    [Alias Light0 light]
    [Alias LightPosition position]
    [Alias LightAmbient ambient]
    [Alias LightDiffuse diffuse]
    [Alias LightSpecular specular]

    [LightingMode AllLights]
    [Program learnopengl.lightingmaps.program]
}

# ===================================================================
# Directionnal Light Caster technique.

[Program learnopengl.lightcasters.directionnal.program]
{
    [Vertex] { [GLSL learnopengl.lightcasters.directionnal.vert] }
    [Fragment] { [GLSL learnopengl.lightcasters.directionnal.frag] }
}

[Technique learnopengl.lightcasters.directionnal.technique]
{
    [Attribute Position position]
    [Attribute Normal normal]
    [Attribute Texture texCoords]

    [Alias ModelMatrix model]
    [Alias ViewMatrix view]
    [Alias ProjectionMatrix projection]

    [Alias CameraPosition viewPos]

    [Alias MaterialTexDiffuse "material.diffuse"]
    [Alias MaterialTexSpecular "material.specular"]
    [Alias MaterialShininess "material.shininess"]

    [Alias Light0 light]
    [Alias LightDirection direction]
    [Alias LightAmbient ambient]
    [Alias LightDiffuse diffuse]
    [Alias LightSpecular specular]

    [LightingMode AllLights]
    [Program learnopengl.lightcasters.directionnal.program]
}

# ===================================================================
# Shadowmapping technique.

[Global MAT4 learnopengl.light.matrix]

[Projection learnopengl.shadow.proj
    Perspective
    45.0 1.0
]

[Program learnopengl.shadowmapping.phase1.program]
{
    [Vertex] { [GLSL learnopengl.shadowmapping.phase1.vert] }
    [Fragment] { [GLSL learnopengl.shadowmapping.phase1.frag] }
}

[Program learnopengl.shadowmapping.phase2.program]
{
    [Vertex] { [GLSL learnopengl.shadowmapping.phase2.vert] }
    [Fragment] { [GLSL learnopengl.shadowmapping.phase2.frag] }
}

[Texture Texture2D learnopengl.shadowmapping.depthtexture]
{
    [Size 1024 1024]
    [PixelFormat DepthComponent]
    [InternalPixelFormat DepthComponent]
    [PixelType Float]
}

[Framebuffer learnopengl.shadowmapping.depthbuffer]
{
    [Viewport 0 0 1024 1024
        learnopengl.shadow.proj]

    [Texture Depth learnopengl.shadowmapping.depthtexture]
    [Drawbuffer None]
}

[Technique learnopengl.shadowmapping.phase1.technique]
{
    [Attribute Position position]
    [Alias LightShadowMatrix lightSpaceMatrix]
    [Alias ModelMatrix model]

    [LightingMode PerLight]
    [Program learnopengl.shadowmapping.phase1.program]
    [Framebuffer learnopengl.shadowmapping.depthbuffer]

    [GlobSet learnopengl.light.matrix ProjectionViewMatrix]
}

[Technique learnopengl.shadowmapping.phase2.technique]
{
    [Attribute Position position]
    [Attribute Normal normal]
    [Attribute Texture texCoords]

    [Alias ModelMatrix model]
    [Alias ViewMatrix view]
    [Alias ProjectionMatrix projection]

    [Alias MaterialTexDiffuse diffuseTexture]
    [Alias LightTexture0 shadowMap]
    [Alias LightPosition lightPos]
    [Alias CameraPosition viewPos]

    [GlobAlias learnopengl.light.matrix lightSpaceMatrix]

    [LightingMode AllLights]
    [Program learnopengl.shadowmapping.phase2.program]
}

# A pipeline is a list of ordered RenderPass. A RenderPass
# may contain one or more techniques. A pipeline can also define directly
# its rendering passes from techniques. This way , one pass will render only
# one technique. User can also set a single Scene for all the pipeline. However,
# this Scene will be set to every pass currently in the pipeline, and anyone can
# change the used Scene for one pass only using 'RenderPass::setScene()'.

[Pipeline learnopengl.shadowmapping.pipeline]
{
    [Technique learnopengl.shadowmapping.phase1.technique INDEX 0]
    [Technique learnopengl.shadowmapping.phase2.technique INDEX 1]
}
